extends layout

block content
  br
  br

  .container
    center#center
      h4 Let's build a #{__('block')}
      br
      hr
      br
      .well#block1chain1well
        form.form-horizontal
          .form-group
            label.col-sm-2.control-label(for='block1chain1number') #{__('Block')}:  
              span#indexspan(class="glyphicon glyphicon-info-sign", data-toggle="tooltip", data-placement="bottom", title="The index is the position of the block in the chain. The genesis block has an index of 0. The next block will have an index of 1." )
            .col-sm-10
              .input-group
                span.input-group-addon #
                input#block1chain1number.form-control(type='text', value='1', onkeyup='$("#hash1").val(sha256(1,1))')


          .form-group
            label.col-sm-2.control-label(for='block1chain1tx') #{__('Tx')}: 
              span#txspan(class="glyphicon glyphicon-info-sign", data-toggle="tooltip", data-placement="bottom", title="The transaction contains information of amount, recipient, and sender, which will be also part of hashed data when mining." )
            .col-sm-2
              .input-group
                .input-group-addon #{__('$')}
                input.form-control(id='block1chain1value', type='text', value='1', onkeyup='$("#hash1").val(sha256(1,1))')
            .col-sm-8
              .input-group
                .input-group-addon #{__('From')}
                select.form-control(id='block1chain1from', onclick='$("#hash1").val(sha256(1,1))')
                  option(value = 'Raymond') Raymond
                  option(value = 'Peter') Peter
                  option(value = 'Johnny') Johnny
                .input-group-addon #{__('To')}
                select.form-control(id='block1chain1to', onclick='$("#hash1").val(sha256(1,1))')
                  option(value = 'Raymond') Raymond
                  option(value = 'Paul') Paul
                  option(value = 'Johny') Johnny
          .form-group
            label.col-sm-2.control-label(for='hash') #{__('Hash')}: 
              span#hashspan(class="glyphicon glyphicon-info-sign", data-toggle="tooltip", data-placement="bottom", title="All the values above will be hashed by SHA256 into fixed-length value." )
            .col-sm-10
              input#hash1.form-control(type='text', disabled)
          .form-group
            .button(id="buildButton" class = "btn btn-primary") 
              span#buttonspan(data-toggle="tooltip", data-placement="bottom", title="Build a block to continue" ) Build a block

      span#arrow(class = "glyphicon glyphicon-arrow-down", style="display:none")
      br 
      br

      .well#block2chain1well(style="display:none")
        form.form-horizontal
          .form-group
            label.col-sm-2.control-label(for='block2chain1number') #{__('Block')}:
            .col-sm-10
              .input-group
                span.input-group-addon #
                input#block2chain1number.form-control(type='text', value='1', disabled)

          .form-group
            label.col-sm-2.control-label(for='hash2') #{__('Hash')}:
            .col-sm-10
              input#hash2.form-control(type='text', disabled)

          .form-group
            label.col-sm-2.control-label(for='block2chain1tx') #{__('Tx')}:
            .col-sm-2
              .input-group
                .input-group-addon #{__('$')}
                input.form-control(id='block2chain1value', type='text', value='1', disabled)
            .col-sm-8
              .input-group
                .input-group-addon #{__('From')}
                select.form-control(id='block2chain1from', disabled)
                  option(value = 'Raymond') Raymond
                  option(value = 'Peter') Peter
                  option(value = 'Johnny') Johnny
                .input-group-addon #{__('To')}
                select.form-control(id='block2chain1to', disabled)
                  option(value = 'Raymond') Raymond
                  option(value = 'Paul') Paul
                  option(value = 'Johny') Johnny
          .form-group
            label.col-sm-2.control-label(for='block2chain1nonce') #{__('Nonce')}: 
              span#noncespan(class = 'glyphicon glyphicon-info-sign', data-toggle="tooltip", data-placement="bottom", title="The nonce is the number used to find a valid hash. The nonce iterates from 0 until a valid hash is found. " )
            .col-sm-10
               input#block2chain1nonce.form-control(type='text', value='72608')
          
          .form-group
            label.col-sm-2.control-label(for='block2chain1difficulty') #{__('Difficulty')}: 
              span#diffspan(class = 'glyphicon glyphicon-info-sign', data-toggle="tooltip", data-placement="top", title="As difficulty increases, the number of possible valid hashes decreases. With less possible valid hashes, it takes more processing power to find a valid hash." )
            .col-sm-10
               input#block2chain1difficulty.form-control(type='text', value='2')
           #state.form-group
              label.col-sm-2.control-label(for='block2chain1hash') #{__('Hash After Mining')}: 
                span#minedhashspan(class = 'glyphicon glyphicon-info-sign', data-toggle="tooltip", data-placement="top", title="Notice the first few digits are 0 as the number of difficulty indicated after you mine the block." )
              .col-sm-10
                input#block2chain1hash.form-control(type='text', disabled)

          .form-group
            //.col-sm-2
            //  i.icon-spinner.icon-spin.icon-large
            
            button#block2chain1mineButton.btn.btn-primary.ladda-button(data-style='expand-right')
              span.ladda-label #{__('Mine')}

  script.
    $(function() {
      mineButtonAnimation(2, 1);
      // updateHash(1, 1);
      $("#hash1").val(sha256());
      $("#hash2").val(sha256());
      $('[data-toggle="tooltip"]').tooltip(); 
      //$("block2chain1well").hide();
    });

    function getText(block, chain) {
      return $('#block'+block+'chain'+chain+'number').val() +
             $('#block'+block+'chain'+chain+'value').val() + 
             $('#block'+block+'chain'+chain+'from').val() + 
             $('#block'+block+'chain'+chain+'to').val() +
             $('#block'+block+'chain'+chain+'nonce').val() +
             $('#block'+block+'chain'+chain+'difficulty').val();
    }

    $("#buildButton").click(function(e) {
      $('#arrow').show();
      $('#block2chain1well').show();
      $('#block2chain1number').val($('#block1chain1number').val());
      $('#block2chain1value').val($('#block1chain1value').val());
      $('#block2chain1from').val($('#block1chain1from').val());
      $('#block2chain1to').val($('#block1chain1to').val());
      $('#hash2').val($('#hash1').val());
      $('#block2chain1hash').val($('#hash1').val());
    });

    function mineButtonAnimation(block, chain) {
      $('#block'+block+'chain'+chain+'mineButton').click(function(e) {
          e.preventDefault();
          var l = Ladda.create(this);
          l.start();
          setTimeout(function() {
              mine(block, chain, false);
              l.stop();
            }, 250); // give UI time to update
        });
    }

    //- $("#hash").val(sha256());
